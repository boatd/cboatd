#!/usr/bin/env python3

import curses
import sys

from boatdclient import Boat
from boatdclient import Behaviour

boatd_text = '''▄▄                                            ▄▄
██                              ██            ██
██▄███▄    ▄████▄    ▄█████▄  ███████    ▄███▄██
██▀  ▀██  ██▀  ▀██   ▀ ▄▄▄██    ██      ██▀  ▀██
██    ██  ██    ██  ▄██▀▀▀██    ██      ██    ██
███▄▄██▀  ▀██▄▄██▀  ██▄▄▄███    ██▄▄▄   ▀██▄▄███
▀▀ ▀▀▀      ▀▀▀▀     ▀▀▀▀ ▀▀     ▀▀▀▀     ▀▀▀ ▀▀'''.splitlines()


def draw_fields(screen, fields, offset=0):
    line_length = max([len(l[0]) for l in fields]) + 2

    for i, (label, value) in enumerate(fields):
        padding = ' ' * (line_length - len(label))
        screen.addstr(i + offset, 2, '{}:{}'.format(label, padding))
        screen.addstr('{}'.format(value), curses.A_BOLD)


def main(stdscr, doot):
    boat = Boat(auto_update=False)
    behaviour = Behaviour()

    curses.halfdelay(1)
    curses.curs_set(0)

    while 1:
        boat.update()

        for i, line in enumerate(boatd_text):
            stdscr.addstr(i + 1, 6, line)

        box = curses.newwin(7, 72, 9, 2)
        box.immedok(True)
        box.border()

        draw_fields(box,
            (
                ('heading', boat.heading),
                ('latitude', boat.position.lat),
                ('longitude', boat.position.long),
                ('relative wind', boat.relative_wind),
                ('absolute wind', boat.wind.direction),
            ),
            offset=1
        )

        draw_fields(stdscr,
            (
                ('behaviours', behaviour.list()),
            ),
            offset=28
        )

        stdscr.refresh()
        try:
            c = stdscr.getch()
            if c == ord('q'):
                sys.exit()
        except Exception as e:
            print(e)



if __name__ == '__main__':
    curses.wrapper(main, [])
